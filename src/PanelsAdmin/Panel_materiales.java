/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package PanelsAdmin;

import classes.Material;
import classesDAO.MaterialDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mario
 */
public class Panel_materiales extends javax.swing.JPanel {

    Material material;
    MaterialDAO materialDAO;
    DefaultTableModel model;
    List<Material> lMateriales;
    int id;
    
    int id_user;
    String nombre_user, pass_user;
    
    public Panel_materiales(int id, String nombre, String pass) {
        initComponents();
        materialDAO = new MaterialDAO();
        model = new DefaultTableModel();
        id = 0;
        this.jBModificar.setEnabled(false);
        this.jBEliminar.setEnabled(false);
        this.jBActivar.setEnabled(false);
        
        id_user = id;
        nombre_user = nombre;
        pass_user = pass;
        
        //this.jLUser.setText(nombre_user);
        this.cargar_table();
    }

    
    void cargar_table(){
        model.setRowCount(0);
        String[] nombreColum = {"Nombre", "Pulgada", "cms", "precio", "Pintura empaque", "Estado"};
        model.setColumnIdentifiers(nombreColum);
        
        lMateriales = materialDAO.ListarMateriales();
        
       
    
        if (lMateriales.size()>-1) {
            for (int i = 0; i < lMateriales.size(); i++) {
                if (lMateriales.get(i).getEstado().equals("a")) {
                    model.addRow(new Object[]{lMateriales.get(i).getNombre(), lMateriales.get(i).getPulgada(), lMateriales.get(i).getCms(),
                                               lMateriales.get(i).getPrecio(), lMateriales.get(i).getPintura_empaque(), "En uso"});
                }
                else{
                    model.addRow(new Object[]{lMateriales.get(i).getNombre(), lMateriales.get(i).getPulgada(), lMateriales.get(i).getCms(),
                                               lMateriales.get(i).getPrecio(), lMateriales.get(i).getPintura_empaque(), "Descontinuado"});
                }
            }
            this.jTableMaterial.setModel(model);
            this.jTableMaterial.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            this.jTableMaterial.setFillsViewportHeight(true);
        }
    }
     
      void cargar_tableNombre(String pNombre){
        model.setRowCount(0);
        String[] nombreColum = {"Nombre", "Pulgada", "cms", "precio", "Pintura empaque", "Estado"};
        model.setColumnIdentifiers(nombreColum);
        
        lMateriales = materialDAO.ListarMaterialesNombre(pNombre);
        
       
    
        if (lMateriales.size()>-1) {
            for (int i = 0; i < lMateriales.size(); i++) {
                if (lMateriales.get(i).getEstado().equals("a")) {
                    model.addRow(new Object[]{lMateriales.get(i).getNombre(), lMateriales.get(i).getPulgada(), lMateriales.get(i).getCms(),
                                               lMateriales.get(i).getPrecio(), lMateriales.get(i).getPintura_empaque(), "En uso"});
                }
                else{
                    model.addRow(new Object[]{lMateriales.get(i).getNombre(), lMateriales.get(i).getPulgada(), lMateriales.get(i).getCms(),
                                               lMateriales.get(i).getPrecio(), lMateriales.get(i).getPintura_empaque(), "Descontinuado"});
                }
            }
            this.jTableMaterial.setModel(model);
            this.jTableMaterial.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            this.jTableMaterial.setFillsViewportHeight(true);
        }
    }
     
     void limpiar(){
        id = 0;
        this.jBIngresar.setEnabled(true);
        this.jBModificar.setEnabled(false);
        this.jBEliminar.setEnabled(false);
        this.jBActivar.setEnabled(false);
        
        this.jTNombreIN.setText("");
        this.jTPulgadaIN.setText("");
        this.jTCmsIN.setText("");
        this.jTPrecioIN.setText("");
        this.jTPinEmpaqueIN.setText("");
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTNombreIN = new javax.swing.JTextField();
        jTPulgadaIN = new javax.swing.JTextField();
        jTCmsIN = new javax.swing.JTextField();
        jTPrecioIN = new javax.swing.JTextField();
        jTPinEmpaqueIN = new javax.swing.JTextField();
        jBIngresar = new javax.swing.JButton();
        jBModificar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBActivar = new javax.swing.JButton();
        jTBuscarNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMaterial = new javax.swing.JTable();
        jBBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(192, 190, 186));
        setPreferredSize(new java.awt.Dimension(1000, 710));

        jLabel1.setFont(new java.awt.Font("Impact", 0, 30)); // NOI18N
        jLabel1.setText("Busqueda de materiales");

        jTNombreIN.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTNombreIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTNombreINMouseClicked(evt);
            }
        });
        jTNombreIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTNombreINActionPerformed(evt);
            }
        });

        jTPulgadaIN.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTPulgadaIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPulgadaINMouseClicked(evt);
            }
        });

        jTCmsIN.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTCmsIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTCmsINMouseClicked(evt);
            }
        });

        jTPrecioIN.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTPrecioIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPrecioINMouseClicked(evt);
            }
        });

        jTPinEmpaqueIN.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTPinEmpaqueIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPinEmpaqueINMouseClicked(evt);
            }
        });

        jBIngresar.setBackground(new java.awt.Color(95, 207, 95));
        jBIngresar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jBIngresar.setText("Ingresar");
        jBIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIngresarActionPerformed(evt);
            }
        });

        jBModificar.setBackground(new java.awt.Color(101, 150, 247));
        jBModificar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jBModificar.setText("Modificar");
        jBModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModificarActionPerformed(evt);
            }
        });

        jBEliminar.setBackground(new java.awt.Color(176, 124, 174));
        jBEliminar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jBEliminar.setText("Eliminar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBActivar.setBackground(new java.awt.Color(255, 117, 117));
        jBActivar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jBActivar.setText("Activar");
        jBActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActivarActionPerformed(evt);
            }
        });

        jTBuscarNombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTBuscarNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTBuscarNombreMouseClicked(evt);
            }
        });

        jTableMaterial.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTableMaterial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMaterial.setRowHeight(35);
        jTableMaterial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMaterialMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMaterial);

        jBBuscar.setBackground(new java.awt.Color(255, 255, 106));
        jBBuscar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel2.setText("Materiales");

        jButton1.setBackground(new java.awt.Color(239, 151, 85));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Ingrese el valor en cms:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Ingrese el nombre del material:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Ingrese el valor en pulgada:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Ingrese el nombre del material a buscar:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Pintura empaque:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Ingrese el precio:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 954, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel4))
                                    .addComponent(jTNombreIN, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel6)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(406, 406, 406)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jBModificar)
                                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTPrecioIN, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(47, 47, 47)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jBActivar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jBIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTPulgadaIN, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel3))
                                    .addComponent(jTCmsIN, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTPinEmpaqueIN, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addComponent(jLabel7)))))
                        .addGap(31, 31, 31))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(461, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addGap(405, 405, 405)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jTNombreIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTPulgadaIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(7, 7, 7)
                        .addComponent(jTCmsIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBBuscar)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBActivar)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTPrecioIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jBIngresar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTPinEmpaqueIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBModificar))
                        .addGap(36, 36, 36)
                        .addComponent(jBEliminar)
                        .addGap(99, 99, 99)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(71, 71, 71)
                    .addComponent(jLabel8)
                    .addContainerGap(646, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIngresarActionPerformed
        boolean bandPulgadas = false, bandCms = false, bandPintura = false, bandPrecio = false, bandNombre = false;
        
        String nombre = this.jTNombreIN.getText();
        double pulgada = 0, cms = 0, precio = 0, pinturaEmpaque = 0;
        
        //evitar errores en los campos que son double en caso q se ingresen letras o valores negativos 
        try {
            pulgada = Double.parseDouble(this.jTPulgadaIN.getText());
            if (pulgada > -1) {
                bandPulgadas = true;
            }
            else{
                bandPulgadas = false;
                JOptionPane.showMessageDialog(null, "Las pulgadas no pueden ser valores negativos o letras");
            }
        } catch (Exception e) {
        }
        
        try {
            cms = Double.parseDouble(this.jTCmsIN.getText());
            if (cms > -1) {
                bandCms = true;
            }
            else{
                bandCms = false;
                JOptionPane.showMessageDialog(null, "Los CMS no pueden ser valores negativos o letras");
            }
        } catch (Exception e) {
        }
        try {
            pinturaEmpaque = Double.parseDouble(this.jTPinEmpaqueIN.getText());
            if (pinturaEmpaque > -1) {
                bandPintura = true;
            }
            else{
                bandPintura = false;
                JOptionPane.showMessageDialog(null, "La pintura empaque no puede tener valores negativos o letras");
            }
        } catch (Exception e) {
        }
        try {
            precio = Double.parseDouble(this.jTPrecioIN.getText());
            if (precio > -1) {
                bandPrecio = true;
            }
            else{
                bandPrecio = false;
                JOptionPane.showMessageDialog(null, "El precio no puede tener valores negativos o letras");
            }
        } catch (Exception e) {
        }
        
        //se evalua si todo esta bien 
        if (bandPintura && bandCms && bandPulgadas && bandPrecio) {
            //se evalua sino viene vacio el campo de nombre
            
            //se evalua si ya existe el material
            for (int i = 0; i < lMateriales.size(); i++) {      
                if (nombre.toLowerCase().equals(lMateriales.get(i).getNombre().toLowerCase()) && pulgada == lMateriales.get(i).getPulgada() &&
                    cms == lMateriales.get(i).getCms()) {
                    bandNombre = true;
                    break;
                }
                else{
                    bandNombre = false;
                }
            }
            //evalua si el material esta repetido
            if (!bandNombre) {
                if (!nombre.equals("Ingrese el nombre del material") && nombre.trim().length() > 0) {
                    //cargar el objeto material para ser mandado al DAO

                    material = new Material(nombre, pulgada, cms, precio, pinturaEmpaque);
                    //El mertodo devuelve un boolean que sirve para saber si fue un exito o fracaso
                    if (materialDAO.insert(material)) {
                        JOptionPane.showMessageDialog(null, "Se ingresó el material exitosamente");
                        this.cargar_table();
                        this.limpiar();
                    }else{
                        JOptionPane.showMessageDialog(null, "Error en el ingreso del material");
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al ingresar el material.\n El material existe.");
            }
           
        }
        else{
            JOptionPane.showMessageDialog(null, "Las unidades de medidas deben ser mayores a 0");
        }           
    }//GEN-LAST:event_jBIngresarActionPerformed

    private void jTNombreINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTNombreINActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTNombreINActionPerformed

    private void jTNombreINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTNombreINMouseClicked
        if (this.jTNombreIN.getText().equals("Ingrese el nombre del material")) {
            this.jTNombreIN.setText("");
        }
    }//GEN-LAST:event_jTNombreINMouseClicked

    private void jTPulgadaINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPulgadaINMouseClicked
        if (this.jTPulgadaIN.getText().equals("Ingrese el valor en pulgada")) {
            this.jTPulgadaIN.setText("");
        }
    }//GEN-LAST:event_jTPulgadaINMouseClicked

    private void jTCmsINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTCmsINMouseClicked
        if (this.jTCmsIN.getText().equals("Ingrese el valor en cms")) {
            this.jTCmsIN.setText("");
        }
    }//GEN-LAST:event_jTCmsINMouseClicked

    private void jTPrecioINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPrecioINMouseClicked
        if (this.jTPrecioIN.getText().equals("Ingrese el precio")) {
            this.jTPrecioIN.setText("");
        }
    }//GEN-LAST:event_jTPrecioINMouseClicked

    private void jTPinEmpaqueINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPinEmpaqueINMouseClicked
        if (this.jTPinEmpaqueIN.getText().equals("Pintura empaque")) {
            this.jTPinEmpaqueIN.setText("");
        }
    }//GEN-LAST:event_jTPinEmpaqueINMouseClicked

    private void jTBuscarNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTBuscarNombreMouseClicked
        if (this.jTBuscarNombre.getText().equals("Ingrese el nombre del material a buscar")) {
            this.jTBuscarNombre.setText("");
        }
    }//GEN-LAST:event_jTBuscarNombreMouseClicked

    private void jTableMaterialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMaterialMouseClicked
        try {
            if(this.jTableMaterial.getSelectedRow() > -1){
                //activar los botones de actualizar y eliminar
                this.jBIngresar.setEnabled(false);
                this.jBModificar.setEnabled(true);
                this.jBEliminar.setEnabled(true);
                this.jBActivar.setEnabled(true);
                
                int index = this.jTableMaterial.getSelectedRow();
                
                id = this.lMateriales.get(index).getMaterial_id();
                this.jTNombreIN.setText(((DefaultTableModel)this.jTableMaterial.getModel()).getValueAt(index, 0).toString());
                this.jTPulgadaIN.setText(((DefaultTableModel)this.jTableMaterial.getModel()).getValueAt(index, 1).toString());
                this.jTCmsIN.setText(((DefaultTableModel)this.jTableMaterial.getModel()).getValueAt(index, 2).toString());
                this.jTPrecioIN.setText(((DefaultTableModel)this.jTableMaterial.getModel()).getValueAt(index, 3).toString());
                this.jTPinEmpaqueIN.setText(((DefaultTableModel)this.jTableMaterial.getModel()).getValueAt(index, 4).toString());                
            }
            else{
                JOptionPane.showMessageDialog(null, "No ha seleccionado ningún elemento de la tabla");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jTableMaterialMouseClicked

    private void jBModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModificarActionPerformed
         boolean bandPulgadas = false, bandCms = false, bandPintura = false, bandPrecio = false;
        
        String nombre = this.jTNombreIN.getText();
        double pulgada = 0, cms = 0, precio = 0, pinturaEmpaque = 0;
        
        //evitar errores en los campos que son double en caso q se ingresen letras o valores negativos 
        try {
            pulgada = Double.parseDouble(this.jTPulgadaIN.getText());
            if (pulgada > -1) {
                bandPulgadas = true;
            }
            else{
                bandPulgadas = false;
                JOptionPane.showMessageDialog(null, "Las pulgadas no pueden ser valores negativos o letras");
            }
        } catch (Exception e) {
        }
        
        try {
            cms = Double.parseDouble(this.jTCmsIN.getText());
            if (cms > -1) {
                bandCms = true;
            }
            else{
                bandCms = false;
                JOptionPane.showMessageDialog(null, "Los CMS no pueden ser valores negativos o letras");
            }
        } catch (Exception e) {
        }
        try {
            pinturaEmpaque = Double.parseDouble(this.jTPinEmpaqueIN.getText());
            if (pinturaEmpaque > -1) {
                bandPintura = true;
            }
            else{
                bandPintura = false;
                JOptionPane.showMessageDialog(null, "La pintura empaque no puede tener valores negativos o letras");
            }
        } catch (Exception e) {
        }
        try {
            precio = Double.parseDouble(this.jTPrecioIN.getText());
            if (precio > -1) {
                bandPrecio = true;
            }
            else{
                bandPrecio = false;
                JOptionPane.showMessageDialog(null, "El precio no puede tener valores negativos o letras");
            }
        } catch (Exception e) {
        }
        

        
        //se evalua si todo esta bien 
        if (bandPintura && bandCms && bandPulgadas && bandPrecio) {
            
            
            //se evalua sino viene vacio el campo de nombre
            if (!nombre.equals("Ingrese el nombre del material") && nombre.trim().length() > 0) {   
                //cargar el objeto material para ser mandado al DAO
                material = new Material(id, nombre, pulgada, cms, precio, pinturaEmpaque);
                //El mertodo devuelve un boolean que sirve para saber si fue un exito o fracaso
                int response = JOptionPane.showConfirmDialog(null, "¿Desea modificar el material?", "Confirmar", JOptionPane.YES_NO_OPTION);
                
                if (response == JOptionPane.YES_OPTION) {
                    if (materialDAO.update(material)) {
                        JOptionPane.showMessageDialog(null, "Se actualizó el material exitosamente");
                        this.cargar_table();
                        this.limpiar();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error en al actualizar el material");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Se cancelo la acción de modificar del material");
                }
                
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Las unidades de medidas deben ser mayores a 0");
        }   
    }//GEN-LAST:event_jBModificarActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "¿Desea eliminar el material?", "Confirmar", JOptionPane.YES_NO_OPTION);
                
        if (response == JOptionPane.YES_OPTION) {
            if (materialDAO.delete(id)) {
                JOptionPane.showMessageDialog(null, "Se eliminó correctamente");
                this.cargar_table();
                this.limpiar();
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al eliminar");
                this.limpiar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Se canceló la accción eliminación del material");
        }
    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jBActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActivarActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "¿Desea eliminar el material?", "Confirmar", JOptionPane.YES_NO_OPTION);
                
        if (response == JOptionPane.YES_OPTION) {
            if (materialDAO.activate(id)) {
                JOptionPane.showMessageDialog(null, "Se reactivó correctamente");
                this.cargar_table();
                this.limpiar();
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al activar el material");
                this.limpiar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Se canceló la acción de activar del material");
        }

        
    }//GEN-LAST:event_jBActivarActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        this.jBIngresar.setEnabled(false);
        String nombreBuscar = this.jTBuscarNombre.getText();
        
        if (!nombreBuscar.equals("Ingrese el nombre del material a buscar") &&
            nombreBuscar.trim().length()> 0) {
            
            this.cargar_tableNombre(nombreBuscar);
        }
        else{
            JOptionPane.showMessageDialog(null, "No ha ingresado el nombre a buscar");
        }
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.limpiar();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActivar;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBIngresar;
    private javax.swing.JButton jBModificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTBuscarNombre;
    private javax.swing.JTextField jTCmsIN;
    private javax.swing.JTextField jTNombreIN;
    private javax.swing.JTextField jTPinEmpaqueIN;
    private javax.swing.JTextField jTPrecioIN;
    private javax.swing.JTextField jTPulgadaIN;
    private javax.swing.JTable jTableMaterial;
    // End of variables declaration//GEN-END:variables
}
